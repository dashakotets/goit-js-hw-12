import{a as h,S as f,i as c}from"./assets/vendor-CRCB-GUD.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const l of r.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function o(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(e){if(e.ep)return;e.ep=!0;const r=o(e);fetch(e.href,r)}})();const m=(s,t)=>{const o={params:{key:"45683137-9da9ef345b4290ae910ded200",q:s,image_type:"photo",orientation:"horizontal",safesearch:!0,page:t,per_page:15}};return h.get("https://pixabay.com/api/",o)},g=s=>`<li class="gallery-card">
    <a href="${s.largeImageURL}"><img src="${s.previewURL}" alt="" title="" class="gallery-img"/></a>
    <div class="card-info">
    <ul class="info-text">
    <li>Likes<span>${s.likes}</span></li>
    <li>Views<span>${s.views}</span></li>
    <li>Comments<span>${s.comments}</span></li>
    <li>Downloads<span>${s.downloads}</span></li>
    </ul>
</div></li>`,d=document.querySelector(".js-search-form"),p=document.querySelector(".js-gallery"),n=document.querySelector(".loader"),u=document.querySelector(".js-load-more");let a=1;const y=new f(".gallery a",{captions:!0,captionDelay:250,captionPosition:"bottom"}),L=async s=>{try{s.preventDefault();const t=d.elements.user_query.value;a=1,n.classList.toggle("is-hidden");const o=await m(t,a);if(console.log(o),n.classList.toggle("is-hidden"),o.data.hits.length===0){c.error({message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"}),p.innerHTML="",d.reset();return}const i=o.data.hits.map(e=>g(e)).join("");p.innerHTML=i,y.refresh(),u.classList.remove("is-hidden")}catch(t){c.error({message:t,position:"topRight"})}},v=async s=>{try{a++,n.classList.toggle("is-hidden");const t=await m(searchedValue,a);n.classList.toggle("is-hidden");const o=t.data.hits.map(i=>g(i)).join("");p.insertAdjacentHTML("beforeend",o),a===t.data.totalHits&&u.classList.add("is-hidden")}catch(t){c.error({message:t,position:"topRight"})}};d.addEventListener("submit",L);u.addEventListener("click",v);
//# sourceMappingURL=index.js.map
